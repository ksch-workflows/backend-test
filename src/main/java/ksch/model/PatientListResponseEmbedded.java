/*
 * K.S.C.H. Workflows
 * This website contains the HTTP endpoints that are offered by the [backend](https://github.com/ksch-workflows/backend) component for frontend components of the [K.S.C.H. Workflows](https://ksch-workflows.github.io/) project. 
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ksch.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import ksch.model.PatientResponse;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * PatientListResponseEmbedded
 */
@JsonPropertyOrder({
  PatientListResponseEmbedded.JSON_PROPERTY_PATIENT_RESOURCE_LIST
})

public class PatientListResponseEmbedded {
  public static final String JSON_PROPERTY_PATIENT_RESOURCE_LIST = "patientResourceList";
  private List<PatientResponse> patientResourceList;

  public PatientListResponseEmbedded() { 
  }

  public PatientListResponseEmbedded patientResourceList(List<PatientResponse> patientResourceList) {
    this.patientResourceList = patientResourceList;
    return this;
  }

  public PatientListResponseEmbedded addPatientResourceListItem(PatientResponse patientResourceListItem) {
    if (this.patientResourceList == null) {
      this.patientResourceList = new ArrayList<>();
    }
    this.patientResourceList.add(patientResourceListItem);
    return this;
  }

   /**
   * Get patientResourceList
   * @return patientResourceList
  **/

  @JsonProperty(JSON_PROPERTY_PATIENT_RESOURCE_LIST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<PatientResponse> getPatientResourceList() {
    return patientResourceList;
  }


  @JsonProperty(JSON_PROPERTY_PATIENT_RESOURCE_LIST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPatientResourceList(List<PatientResponse> patientResourceList) {
    this.patientResourceList = patientResourceList;
  }


  /**
   * Return true if this PatientListResponse_embedded object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PatientListResponseEmbedded patientListResponseEmbedded = (PatientListResponseEmbedded) o;
    return Objects.equals(this.patientResourceList, patientListResponseEmbedded.patientResourceList);
  }

  @Override
  public int hashCode() {
    return Objects.hash(patientResourceList);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PatientListResponseEmbedded {\n");
    sb.append("    patientResourceList: ").append(toIndentedString(patientResourceList)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `patientResourceList` to the URL query string
    if (getPatientResourceList() != null) {
      for (int i = 0; i < getPatientResourceList().size(); i++) {
        if (getPatientResourceList().get(i) != null) {
          joiner.add(getPatientResourceList().get(i).toUrlQueryString(String.format("%spatientResourceList%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    return joiner.toString();
  }
}


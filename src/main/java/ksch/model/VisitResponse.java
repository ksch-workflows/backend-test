/*
 * K.S.C.H. Workflows
 * This website contains the HTTP endpoints that are offered by the [backend](https://github.com/ksch-workflows/backend) component for frontend components of the [K.S.C.H. Workflows](https://ksch-workflows.github.io/) project. 
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ksch.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import java.util.UUID;
import ksch.model.VisitType;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * VisitResponse
 */
@JsonPropertyOrder({
  VisitResponse.JSON_PROPERTY_TYPE,
  VisitResponse.JSON_PROPERTY_ID,
  VisitResponse.JSON_PROPERTY_OPD_NUMBER,
  VisitResponse.JSON_PROPERTY_TIME_START,
  VisitResponse.JSON_PROPERTY_TIME_END
})

public class VisitResponse {
  public static final String JSON_PROPERTY_TYPE = "type";
  private VisitType type;

  public static final String JSON_PROPERTY_ID = "_id";
  private UUID id;

  public static final String JSON_PROPERTY_OPD_NUMBER = "opdNumber";
  private String opdNumber;

  public static final String JSON_PROPERTY_TIME_START = "timeStart";
  private String timeStart;

  public static final String JSON_PROPERTY_TIME_END = "timeEnd";
  private JsonNullable<String> timeEnd = JsonNullable.<String>undefined();

  public VisitResponse() { 
  }

  public VisitResponse type(VisitType type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/

  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public VisitType getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setType(VisitType type) {
    this.type = type;
  }


  public VisitResponse id(UUID id) {
    this.id = id;
    return this;
  }

   /**
   * Technical identifier of the visit
   * @return id
  **/

  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(UUID id) {
    this.id = id;
  }


  public VisitResponse opdNumber(String opdNumber) {
    this.opdNumber = opdNumber;
    return this;
  }

   /**
   * OPD number of the visit
   * @return opdNumber
  **/

  @JsonProperty(JSON_PROPERTY_OPD_NUMBER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getOpdNumber() {
    return opdNumber;
  }


  @JsonProperty(JSON_PROPERTY_OPD_NUMBER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setOpdNumber(String opdNumber) {
    this.opdNumber = opdNumber;
  }


  public VisitResponse timeStart(String timeStart) {
    this.timeStart = timeStart;
    return this;
  }

   /**
   * The time of the patient registration
   * @return timeStart
  **/

  @JsonProperty(JSON_PROPERTY_TIME_START)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getTimeStart() {
    return timeStart;
  }


  @JsonProperty(JSON_PROPERTY_TIME_START)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTimeStart(String timeStart) {
    this.timeStart = timeStart;
  }


  public VisitResponse timeEnd(String timeEnd) {
    this.timeEnd = JsonNullable.<String>of(timeEnd);
    return this;
  }

   /**
   * The time of the patient discharge
   * @return timeEnd
  **/

  @JsonIgnore

  public String getTimeEnd() {
        return timeEnd.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TIME_END)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getTimeEnd_JsonNullable() {
    return timeEnd;
  }
  
  @JsonProperty(JSON_PROPERTY_TIME_END)
  public void setTimeEnd_JsonNullable(JsonNullable<String> timeEnd) {
    this.timeEnd = timeEnd;
  }

  public void setTimeEnd(String timeEnd) {
    this.timeEnd = JsonNullable.<String>of(timeEnd);
  }


  /**
   * Return true if this VisitResponse object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VisitResponse visitResponse = (VisitResponse) o;
    return Objects.equals(this.type, visitResponse.type) &&
        Objects.equals(this.id, visitResponse.id) &&
        Objects.equals(this.opdNumber, visitResponse.opdNumber) &&
        Objects.equals(this.timeStart, visitResponse.timeStart) &&
        equalsNullable(this.timeEnd, visitResponse.timeEnd);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, id, opdNumber, timeStart, hashCodeNullable(timeEnd));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VisitResponse {\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    opdNumber: ").append(toIndentedString(opdNumber)).append("\n");
    sb.append("    timeStart: ").append(toIndentedString(timeStart)).append("\n");
    sb.append("    timeEnd: ").append(toIndentedString(timeEnd)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `type` to the URL query string
    if (getType() != null) {
      joiner.add(String.format("%stype%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getType()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `_id` to the URL query string
    if (getId() != null) {
      joiner.add(String.format("%s_id%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getId()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `opdNumber` to the URL query string
    if (getOpdNumber() != null) {
      joiner.add(String.format("%sopdNumber%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getOpdNumber()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `timeStart` to the URL query string
    if (getTimeStart() != null) {
      joiner.add(String.format("%stimeStart%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getTimeStart()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `timeEnd` to the URL query string
    if (getTimeEnd() != null) {
      joiner.add(String.format("%stimeEnd%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getTimeEnd()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    return joiner.toString();
  }
}

